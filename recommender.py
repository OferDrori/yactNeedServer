# -*- coding: utf-8 -*-
"""ofer_project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HS28msuZDrH5vjMMEYFTgbNj51bft7zR
"""

import pandas as pd # tables
import numpy as np # math
import matplotlib.pyplot as plt #visualiztion
import seaborn as sns


def aiFunc( age, yearOfExpiriance, nunberOfChildren,sex):
  from sklearn.tree import DecisionTreeClassifier
  from sklearn.linear_model import LogisticRegression
  from sklearn.metrics import accuracy_score

  """# New Section"""

  from sklearn.model_selection import train_test_split
  from sklearn import preprocessing

  df = pd.DataFrame(pd.read_excel(open('chooseRiver.xlsx', 'rb')))
  df = df.sample(frac=1)
  print(len(df),"num of row")

# sns.countplot(df['age:'],hue=df['choosen river'])
  sns.countplot(df['years of expiriance:'],hue=df['choosen river'])
  df.columns
  X = df[['age:', 'years of expiriance:', 'how much cildren:', 'location:', 'sex ']]
  y = df['choosen river']
  X.columns

  lb = preprocessing.LabelEncoder()
  X['sex '] = lb.fit_transform(X['sex '])

  lb = preprocessing.LabelEncoder()
  X['location:'] = lb.fit_transform(X['location:'])

  lb = preprocessing.LabelEncoder()
  y = lb.fit_transform(y)

  X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)


##models = [DecisionTreeClassifier,LogisticRegression]
  models = [LogisticRegression]
  for model in models:
    model = model()
    model.fit(X_train,y_train)
    preds = model.predict(X_test)
    print(accuracy_score(y_test,preds),"accuracy_score of linear regression")



  res = pd.DataFrame()
  res['real'] = y_test
  res['predict'] = preds



  accuracy_score(preds,y_test)

  # age:	years of expiriance:	how much cildren:	location:	sex
  arr = np.array([age, yearOfExpiriance, nunberOfChildren,0,sex])
  print ("calculate",model.predict(arr.reshape(1,-1)))
  a=model.predict(arr.reshape(1,-1))
  return str(a)[1]